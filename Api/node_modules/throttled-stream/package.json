{
  "author": {
    "name": "Travis Collins",
    "email": "travis@tec27.com",
    "url": "http://tec27.com/"
  },
  "name": "throttled-stream",
  "description": "Stream implementation that throttles its output to a maximum number of bytes per second.",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/tec27/node-throttled-stream.git"
  },
  "keywords": [
    "streams",
    "throttling"
  ],
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "#throttled-stream\r\nStream implementation with support for throttling data to a specified number of bytes per second. Inspired by [node-throttle](https://github.com/TooTallNate/node-throttle), but implemented as a full-on stream interface so that we can have more granular control over when and how data gets sent.\r\n\r\n##Usage\r\n```javascript\r\nvar throttle = require('throttled-stream')\r\n\r\n// open a normal stream\r\nvar stream = require('fs').createReadStream('./myFile')\r\n\r\n// get a throttled stream that runs at 64 KB/s or slower\r\nvar slowStream = throttle(stream, 64*1024)\r\n\r\nslowStream.on('data', function(chunk) {\r\n\t// ...\r\n})\r\n```\r\n\r\n##Methods\r\n###throttled-stream(stream, bytesPerSecond, [maxWaitTimeMs = 100])\r\nPipes the specified stream into a new throttled stream, allowing at most `bytesPerSecond` bytes per second through. `maxWaitTimeMs` allows you to specify the maximum amount of time, in milliseconds, that the stream will wait before trying to emit another `data` event if it receives more data than it can allow through at once.\r\n\r\n##Installation\r\n```\r\nnpm install throttled-stream\r\n```\r\n\r\n##License\r\nWTFPL\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/tec27/node-throttled-stream/issues"
  },
  "homepage": "https://github.com/tec27/node-throttled-stream",
  "_id": "throttled-stream@0.0.1",
  "_from": "throttled-stream@"
}
